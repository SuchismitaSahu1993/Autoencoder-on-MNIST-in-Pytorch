{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "autoencoder.ipynb",
      "provenance": [],
      "collapsed_sections": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "pyPIFEupqXjA",
        "outputId": "96c3c23c-054b-4e01-91ae-d8419cb36a29"
      },
      "source": [
        "import torch\n",
        "import pprint as pp\n",
        "import torchvision\n",
        "from torch import nn\n",
        "from torch.utils.data import DataLoader\n",
        "import torch.nn.functional as F\n",
        "from torchvision import datasets\n",
        "from torchvision.transforms import ToTensor, Lambda, Compose\n",
        "import matplotlib.pyplot as plt\n",
        "import torch.optim as optim\n",
        "from torch.optim.lr_scheduler import StepLR\n",
        "from torchvision import datasets, transforms\n",
        "import numpy as np\n",
        "%config IPCompleter.use_jedi = False"
      ],
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:14: UserWarning: Config option `use_jedi` not recognized by `IPCompleter`.\n",
            "  \n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "xRKn2iuhqYGR"
      },
      "source": [
        "n_epochs = 5\n",
        "batch_size_train = 64\n",
        "batch_size_test = 1000\n",
        "learning_rate = 0.01\n",
        "momentum = 0.5\n",
        "log_interval = 10\n",
        "\n",
        "random_seed = 1\n",
        "torch.backends.cudnn.enabled = False\n",
        "torch.manual_seed(random_seed)\n",
        "\n",
        "conv = True"
      ],
      "execution_count": 45,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8MJNBCMPqbPM"
      },
      "source": [
        "train_loader = torch.utils.data.DataLoader(\n",
        "  torchvision.datasets.MNIST('/files/', train=True, download=True,\n",
        "                             transform=torchvision.transforms.Compose([\n",
        "                               torchvision.transforms.ToTensor(),\n",
        "                               torchvision.transforms.Normalize(\n",
        "                                 (0.1307,), (0.3081,))\n",
        "                             ])),\n",
        "  batch_size=batch_size_train, shuffle=True)\n",
        "\n",
        "test_loader = torch.utils.data.DataLoader(\n",
        "  torchvision.datasets.MNIST('/files/', train=False, download=True,\n",
        "                             transform=torchvision.transforms.Compose([\n",
        "                               torchvision.transforms.ToTensor(),\n",
        "                               torchvision.transforms.Normalize(\n",
        "                                 (0.1307,), (0.3081,))\n",
        "                             ])),\n",
        "  batch_size=batch_size_test, shuffle=True)\n",
        "\n",
        "#  use gpu if available\n",
        "device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")"
      ],
      "execution_count": 7,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "of72KaErTWXc"
      },
      "source": [
        "class Autoencoder_conv(nn.Module):\n",
        "  def __init__(self):\n",
        "    super().__init__()\n",
        "    self.encoder = nn.Sequential(\n",
        "        # N, 1, 28, 28\n",
        "        nn.Conv2d(1, 32, 3, stride=2, padding=1), # N, 32, 14, 14\n",
        "        nn.ReLU(),\n",
        "        nn.Conv2d(32, 16, 3, stride=2, padding=1), # N, 16, 7, 7\n",
        "        nn.ReLU(),\n",
        "        nn.Conv2d(16, 16, 4, stride=2, padding=1), # N, 16, 3, 3\n",
        "        nn.ReLU(),\n",
        "        nn.Conv2d(16, 8, 3), # N, 8, 1, 1\n",
        "        nn.ReLU(),\n",
        "        nn.Conv2d(8, 2, 1), # N, 2, 1, 1\n",
        "    )\n",
        "    self.decoder = nn.Sequential(\n",
        "        # N, 64, 1, 1\n",
        "        nn.ConvTranspose2d(2, 8, 1), # N, 2, 1, 1\n",
        "        nn.ReLU(),\n",
        "        nn.ConvTranspose2d(8, 16, 3), # N, \n",
        "        nn.ReLU(),\n",
        "        nn.ConvTranspose2d(16, 16, 4, stride=2, padding=1, output_padding=1), # N, \n",
        "        nn.ReLU(),\n",
        "        nn.ConvTranspose2d(16, 32, 3, stride=2, padding=1, output_padding=1), # N,\n",
        "        nn.ReLU(),\n",
        "        nn.ConvTranspose2d(32, 1, 3, stride=2, padding=1, output_padding=1),  # N, \n",
        "        nn.Sigmoid()\n",
        "    )\n",
        "\n",
        "  def forward(self, x):\n",
        "    encoded = self.encoder(x)\n",
        "    decoded = self.decoder(encoded)\n",
        "    return decoded\n",
        "if conv == True:\n",
        "    model = Autoencoder_conv().to(device)\n",
        "    loss_fn = nn.MSELoss()\n",
        "    optimizer = torch.optim.Adam(model.parameters(), lr=learning_rate)\n",
        "    scheduler = StepLR(optimizer, step_size=1, gamma=0.99)\n",
        "    criterion = nn.MSELoss().to(device)"
      ],
      "execution_count": 49,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "sVVV8tj3qj_6"
      },
      "source": [
        "class Net(nn.Module):\n",
        "    def __init__(self):\n",
        "        super().__init__()\n",
        "        \n",
        "        self.encoder = nn.Sequential(\n",
        "            nn.Linear(28 * 28, 128),\n",
        "            nn.ReLU(True),\n",
        "            nn.Linear(128, 64),\n",
        "            nn.ReLU(True),\n",
        "            nn.Linear(64, 12),\n",
        "            nn.ReLU(True),\n",
        "            nn.Linear(12, 3))\n",
        "        \n",
        "        self.decoder = nn.Sequential(\n",
        "            nn.Linear(3, 12),\n",
        "            nn.ReLU(True),\n",
        "            nn.Linear(12, 64),\n",
        "            nn.ReLU(True),\n",
        "            nn.Linear(64, 128),\n",
        "            nn.ReLU(True),\n",
        "            nn.Linear(128, 28 * 28),\n",
        "            nn.Tanh())\n",
        "\n",
        "    def forward(self, x):\n",
        "        x = x.view(-1, 784)\n",
        "        x = self.encoder(x)\n",
        "        x = self.decoder(x)\n",
        "        return x\n",
        "\n",
        "\n",
        "if conv == False:\n",
        "    # create a model from `AE` autoencoder class\n",
        "    # load it to the specified device, either gpu or cpu\n",
        "    model = Net().to(device)\n",
        "\n",
        "    # create an optimizer object\n",
        "    # Adam optimizer with learning rate 1e-3\n",
        "    optimizer = optim.Adam(model.parameters(), lr=0.01)\n",
        "\n",
        "    # mean-squared error loss\n",
        "    criterion = nn.MSELoss().to(device)"
      ],
      "execution_count": 47,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "F31DBORR_e9J"
      },
      "source": [
        "def train(model, device, train_loader, optimizer, epochs, conv):\n",
        "    loss = 0\n",
        "\n",
        "    for batch_features, target in train_loader:\n",
        "        # reshape mini-batch data to [N, 784] matrix\n",
        "        # load it to the active device\n",
        "        \n",
        "        if conv == False:\n",
        "            batch_features = batch_features.view(-1, 784).to(device)\n",
        "        \n",
        "        # reset the gradients back to zero\n",
        "        # PyTorch accumulates gradients on subsequent backward passes\n",
        "        optimizer.zero_grad()\n",
        "        \n",
        "        # compute reconstructions\n",
        "        outputs = model(batch_features)\n",
        "\n",
        "        # compute training reconstruction loss\n",
        "        train_loss = criterion(outputs, batch_features)\n",
        "        \n",
        "        # compute accumulated gradients\n",
        "        train_loss.backward()\n",
        "        \n",
        "        # perform parameter update based on current gradients\n",
        "        optimizer.step()\n",
        "        \n",
        "        # add the mini-batch training loss to epoch loss\n",
        "        loss += train_loss.item()\n",
        "    \n",
        "    # compute the epoch training loss\n",
        "    loss = loss / len(train_loader)\n",
        "    \n",
        "    # display the epoch training loss\n",
        "    print(\"epoch : {}/{}, loss = {:.6f}\".format(epochs + 1, epochs, loss))\n",
        "    return outputs,batch_features"
      ],
      "execution_count": 46,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QJ_QeiizuG5i",
        "outputId": "86e410f3-be74-4881-ca39-d813c7e328a3"
      },
      "source": [
        "use_cuda = torch.cuda.is_available()\n",
        "device = torch.device(\"cuda\" if use_cuda else \"cpu\")\n",
        "\n",
        "\n",
        "outputs = [train( model, device, train_loader, optimizer, epoch, conv) for epoch in range(0, n_epochs)]"
      ],
      "execution_count": 50,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "epoch : 1/0, loss = 0.796829\n",
            "epoch : 2/1, loss = 0.689647\n",
            "epoch : 3/2, loss = 0.680555\n",
            "epoch : 4/3, loss = 0.673990\n",
            "epoch : 5/4, loss = 0.668033\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 770
        },
        "id": "wX3A0ZHWBwzy",
        "outputId": "2a62cb3b-7149-42fe-b9b6-11bb19a7b2c3"
      },
      "source": [
        "for k in range(0, n_epochs):\n",
        "    plt.figure(figsize=(9, 2))\n",
        "    plt.gray()\n",
        "    # print(outputs[k][0].shape)\n",
        "    # imgs = outputs[0][k].detach().numpy().reshape(28, 28)\n",
        "    for i, item in enumerate(outputs[k][0]):\n",
        "        if i >= 9: break\n",
        "        if i == 1: plt.title(\"Epoch: {}, reconstructured\".format(k+1))\n",
        "        plt.subplot(2,9, i+1)\n",
        "        \n",
        "        plt.xticks([])\n",
        "        plt.yticks([])   \n",
        "\n",
        "\n",
        "        plt.subplot(2,9, i+1)\n",
        "        plt.imshow((item.detach().numpy().reshape(28, 28)), cmap='gray', interpolation='none')\n",
        "\n",
        "\n",
        "    for i, item in enumerate(outputs[k][1]):\n",
        "        if i >= 9: break\n",
        "        if i == 1: plt.title(\"Epoch: {}, original\".format(k+1))\n",
        "        plt.subplot(2, 9, 9+i+1)\n",
        "        plt.xticks([])\n",
        "        plt.yticks([]) \n",
        "        plt.imshow((item.detach().numpy().reshape(28, 28)), cmap='gray', interpolation='none')"
      ],
      "execution_count": 51,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:15: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.\n",
            "  from ipykernel import kernelapp as app\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 648x144 with 18 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 648x144 with 18 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 648x144 with 18 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 648x144 with 18 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 648x144 with 18 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "PB62OcO6BxTJ"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}
